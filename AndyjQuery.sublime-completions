{
    "scope": "source.js.jquery -string -comment -constant",

    "completions": [
        "jQuery",
        "jquery",   /* version number */
        "context",
        "length",

        { "trigger": "jQuery()", "contents": "jQuery(${1})$0" },

        { "trigger": "add()", "contents": "add(${1:selector}${2:[, context]})$0" },
        { "trigger": "addClass()", "contents": "addClass(${1:classname_or_fn})$0" },
        { "trigger": "after()", "contents": "after(${1:contents_or_fn})$0" },
        { "trigger": "animate(duration)", "contents": "animate(${1:properties}${2:[, duration]}${3:[, easing]}${4:[, complete]})$0" },
        { "trigger": "animate(options)", "contents": "animate(${1:properties}, ${2:options})$0" },
        { "trigger": "append()", "contents": "append(${1:contents_or_fn})$0" },
        { "trigger": "appendTo()", "contents": "appendTo(${1:target})$0" },
        { "trigger": "attr()", "contents": "attr(${1:attributeName}${2:[, value]})$0" },
        { "trigger": "before()", "contents": "before(${1:contents_or_fn})$0" },
        { "trigger": "bind(events)", "contents": "bind(${1:events})$0" },
        { "trigger": "bind()", "contents": "bind(${1:eventType}${2:[, eventData]}${3:[, preventBubble_or_fn]})$0" },
        { "trigger": "blur()", "contents": "blur(${1})$0" },
        { "trigger": "change()", "contents": "change(${1})$0" },
        { "trigger": "children()", "contents": "children(${1:[selector]})$0" },
        { "trigger": "clearQueue()", "contents": "clearQueue(${1:[queueName]})$0" },
        { "trigger": "click()", "contents": "click(${1})$0" },
        { "trigger": "clone()", "contents": "clone(${1:[withDataAndEvents]}${2:[, deep]})$0" },
        { "trigger": "closest()", "contents": "closest(${1:selectors}${2:[, context]})$0" },
        { "trigger": "contents()", "contents": "contents()$0" },
        { "trigger": "css()", "contents": "css(${1:propertyName}${2:[, value]})$0" },
        { "trigger": "data(key, value)", "contents": "data(${1:key}${2:[, value]})$0" },
        { "trigger": "data(obj)", "contents": "data(${1})$0" },
        { "trigger": "dblclick()", "contents": "dblclick(${1})$0" },
        { "trigger": "delay()", "contents": "delay(${1:duration}${2:[, queueName]})$0" },
        { "trigger": "delegate()", "contents": "delegate(${1:selector}, ${2:events})$0" },
        { "trigger": "dequeue()", "contents": "dequeue(${1:[queueName]})$0" },
        { "trigger": "die()", "contents": "die()$0" },
        { "trigger": "die(event)", "contents": "die(${1:eventType}${2:[, handler]})$0" },
        { "trigger": "each(fn)", "contents": "each(function (index, elem) { $1 })$0" },
        { "trigger": "empty()", "contents": "empty()$0" },
        { "trigger": "end()", "contents": "end()$0" },
        { "trigger": "eq()", "contents": "eq(${1:index})$0" },
        { "trigger": "error()", "contents": "error(${1:[eventData, ]}${2:handler})$0" },
        { "trigger": "fadeIn()", "contents": "fadeIn(${1:[duration]}${2:[, easing]}${3:[, callback]})$0" },
        { "trigger": "fadeOut()", "contents": "fadeOut(${1:[duration]}${2:[, easing]}${3:[, callback]})$0" },
        { "trigger": "fadeTo()", "contents": "fadeTo(${1:duration}, ${2:opacity}${3:[, easing]}${4:[, callback]})$0" },
        { "trigger": "fadeToggle()", "contents": "fadeToggle(${1:[duration]}${2:[, easing]}${3:[, callback]})$0" },
        { "trigger": "filter()", "contents": "filter(${1:selector_or_fn})$0" },
        { "trigger": "find()", "contents": "find(${1:selector})$0" },
        { "trigger": "first()", "contents": "first()$0" },
        { "trigger": "focus()", "contents": "focus()$0" },
        { "trigger": "focus(handler)", "contents": "focus(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "focusin(handler)", "contents": "focusin(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "get()", "contents": "get(${1:[index]})$0" },
        { "trigger": "has()", "contents": "has(${1:selector})$0" },
        { "trigger": "hasClass()", "contents": "hasClass(${1:className})$0" },
        { "trigger": "height()", "contents": "height()$0" },
        { "trigger": "height(value)", "contents": "height(${1:value_or_fn})$0" },
        { "trigger": "hide()", "contents": "hide()$0" },
        { "trigger": "hide(duration)", "contents": "hide(${1:[duration]}${2:[, easing]}${3:[, callback]})$0" },
        { "trigger": "hover()", "contents": "hover(${1:handlers_inout})$0" },
        { "trigger": "html()", "contents": "html(${1:[htmlString]})$0" },
        { "trigger": "html(fn)", "contents": "html(function (index, oldhtml) { $1 })$0" },
        { "trigger": "index()", "contents": "index(${1:[selector]})$0" },
        { "trigger": "innerHeight()", "contents": "innerHeight()$0" },
        { "trigger": "innerWidth()", "contents": "innerWidth()$0" },
        { "trigger": "insertAfter()", "contents": "insertAfter(${1:target})$0" },
        { "trigger": "insertBefore()", "contents": "insertBefore(${1:target})$0" },
        { "trigger": "is()", "contents": "is(${1:selector_or_fn})$0" },
        { "trigger": "keydown()", "contents": "keydown()$0" },
        { "trigger": "keydown(handler)", "contents": "keydown(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "keypress()", "contents": "keypress()$0" },
        { "trigger": "keypress(handler)", "contents": "keypress(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "keyup()", "contents": "keyup()$0" },
        { "trigger": "keyup(handler)", "contents": "keyup(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "last()", "contents": "last()$0" },
        { "trigger": "live(deprecated)", "contents": "live($1)$0" },
        { "trigger": "load(handler)", "contents": "load(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "load(url)", "contents": "load(${1:url}${2:[, data]}${3:[, complete_fn]})$0" },
        { "trigger": "map()", "contents": "map(function (index, domElement) { $1 })$0" },
        { "trigger": "mousedown()", "contents": "mousedown()$0" },
        { "trigger": "mousedown(handler)", "contents": "mousedown(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "mouseenter()", "contents": "mouseenter()$0" },
        { "trigger": "mouseenter(handler)", "contents": "mouseenter(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "mouseleave()", "contents": "mouseleave()$0" },
        { "trigger": "mouseleave(handler)", "contents": "mouseleave(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "mousemove()", "contents": "mousemove()$0" },
        { "trigger": "mousemove(handler)", "contents": "mousemove(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "mouseout()", "contents": "mouseout()$0" },
        { "trigger": "mouseout(handler)", "contents": "mouseout(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "mouseover()", "contents": "mouseover()$0" },
        { "trigger": "mouseover(handler)", "contents": "mouseover(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "mouseup()", "contents": "mouseup()$0" },
        { "trigger": "mouseup(handler)", "contents": "mouseup(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "next()", "contents": "next(${1:[selector]})$0" },
        { "trigger": "nextAll()", "contents": "nextAll(${1:[selector]})$0" },
        { "trigger": "nextUntil()", "contents": "nextUntil(${1:[selector]}${2:[, filter]})$0" },
        { "trigger": "not()", "contents": "not(${1:selector_or_fn})$0" },
        { "trigger": "off()", "contents": "off($1)$0" },
        { "trigger": "offset()", "contents": "offset(${1:[coords_or_fn]})$0" },
        { "trigger": "offsetParent()", "contents": "offsetParent()$0" },
        { "trigger": "on()", "contents": "on($1)$0" },
        { "trigger": "one()", "contents": "one($1)$0" },
        { "trigger": "outerHeight()", "contents": "outerHeight(${1:[includeMargin]})$0" },
        { "trigger": "outerWidth()", "contents": "outerWidth(${1:[includeMargin]})$0" },
        { "trigger": "parent()", "contents": "parent(${1:[selector]})$0" },
        { "trigger": "parents()", "contents": "parents(${1:[selector]})$0" },
        { "trigger": "parentsUntil()", "contents": "parentsUntil(${1:[selector]}${2:[, filter]})$0" },
        { "trigger": "position()", "contents": "position()$0" },
        { "trigger": "prepend()", "contents": "prepend(${1:contents_or_fn})$0" },
        { "trigger": "prependTo()", "contents": "prependTo(${1:target})$0" },
        { "trigger": "prev()", "contents": "prev(${1:[selector]})$0" },
        { "trigger": "prevAll()", "contents": "prevAll(${1:[selector]})$0" },
        { "trigger": "prevUntil()", "contents": "prevUntil(${1:[selector]}${2:[, filter]})$0" },
        { "trigger": "promise()", "contents": "promise(${1:[type]}${2:[, target]})$0" },
        { "trigger": "prop()", "contents": "prop(${1:propertyName_or_map}${2:[, value_or_fn]})$0" },
        { "trigger": "pushStack()", "contents": "pushStack(${1:elements}${2:[, name]}${3:[, arguments]})$0" },
        { "trigger": "queue()", "contents": "queue(${1:[queueName]}${2:[, newQueue_or_fn]})$0" },
        { "trigger": "ready()", "contents": "ready(${1:handler})$0" },
        { "trigger": "remove()", "contents": "remove(${1:[selector]})$0" },
        { "trigger": "removeAttr()", "contents": "removeAttr(${1:attributeName})$0" },
        { "trigger": "removeClass()", "contents": "removeClass(${1:[className_or_fn]})$0" },
        { "trigger": "removeData()", "contents": "removeData(${1:[name_or_list]})$0" },
        { "trigger": "removeProp()", "contents": "removeProp(${1:propertyName})$0" },
        { "trigger": "replaceAll()", "contents": "replaceAll(${1:target})$0" },
        { "trigger": "replaceWith()", "contents": "replaceWith(${1:newContent_or_fn})$0" },
        { "trigger": "resize()", "contents": "resize()$0" },
        { "trigger": "resize(handler)", "contents": "resize(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "scroll()", "contents": "scroll()$0" },
        { "trigger": "scroll(handler)", "contents": "scroll(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "scrollLeft()", "contents": "scrollLeft(${1:[value]})$0" },
        { "trigger": "scrollTop()", "contents": "scrollTop(${1:[value]})$0" },
        { "trigger": "select()", "contents": "select()$0" },
        { "trigger": "select(handler)", "contents": "select(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "serialize()", "contents": "serialize()$0" },
        { "trigger": "serializeArray()", "contents": "serializeArray()$0" },
        { "trigger": "show()", "contents": "show()$0" },
        { "trigger": "show(duration)", "contents": "show(${1:[duration]}${2:[, easing]}${3:[, callback]})$0" },
        { "trigger": "siblings()", "contents": "siblings(${1:[selector]})$0" },
        { "trigger": "size()", "contents": "size()$0" },
        { "trigger": "slice()", "contents": "slice(${1:start}${2:[, end]})$0" },
        { "trigger": "slideDown()", "contents": "slideDown(${1:[duration]}${2:[, easing]}${3:[, callback]})$0" },
        { "trigger": "slideToggle()", "contents": "slideToggle(${1:[duration]}${2:[, easing]}${3:[, callback]})$0" },
        { "trigger": "slideUp()", "contents": "slideUp(${1:[duration]}${2:[, easing]}${3:[, callback]})$0" },
        { "trigger": "stop()", "contents": "stop(${1:[queue]}${2:[, clearQueue]}${3:[, jumpToEnd]})$0" },
        { "trigger": "submit()", "contents": "submit()$0" },
        { "trigger": "submit(handler)", "contents": "submit(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "text()", "contents": "text($1)$0" },
        { "trigger": "toArray()", "contents": "toArray($1)$0" },
        { "trigger": "toggle()", "contents": "toggle($1)$0" },
        { "trigger": "toggleClass()", "contents": "toggleClass($1)$0" },
        { "trigger": "trigger(event)", "contents": "trigger(${1:event})$0" },
        { "trigger": "trigger(type)", "contents": "trigger(${1:eventType}${2:[, extraParameters]})$0" },
        { "trigger": "triggerHandler()", "contents": "triggerHandler(${1:eventType}${2:[, extraParameters]})$0" },
        { "trigger": "unbind()", "contents": "unbind($1)$0" },
        { "trigger": "undelegate()", "contents": "undelegate($1)$0" },
        { "trigger": "unload()", "contents": "unload(${1:[eventData]}${2:[, handler]})$0" },
        { "trigger": "unwrap()", "contents": "unwrap()$0" },
        { "trigger": "val()", "contents": "val()$0" },
        { "trigger": "val(value)", "contents": "val(${1:value_or_fn})$0" },
        { "trigger": "width()", "contents": "width()$0" },
        { "trigger": "width(value)", "contents": "width(${1:value_or_fn})$0" },
        { "trigger": "wrap()", "contents": "wrap(${1:element_or_fn})$0" },
        { "trigger": "wrapAll()", "contents": "wrapAll(${1:wrappingElement})$0" },
        { "trigger": "wrapInner()", "contents": "wrapInner(${1:element_or_fn})$0" }
    ]
}